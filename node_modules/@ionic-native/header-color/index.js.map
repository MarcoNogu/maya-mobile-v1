{"version":3,"sources":["../../../src/@ionic-native/plugins/header-color/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;GAeG;AASH,IAAa,WAAW;IAAS,+BAAiB;IAAlD;;IAoBA,CAAC;IAlBC;;;;OAIG;IAMH,0BAAI,GAAJ,UAAK,KAAa,IAAkB,MAAM,CAAC,CAAC,CAAC;IAQ/C,kBAAC;AAAD,CApBA,AAoBC,CApBgC,iBAAiB,GAoBjD;AANM,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAPA;IALC,OAAO,CAAC;QACP,aAAa,EAAE,QAAQ;QACvB,WAAW,EAAE,SAAS;QACtB,SAAS,EAAE,SAAS;KACrB,CAAC;;;;uCAC2C;AAZlC,WAAW;IARvB,MAAM,CAAC;QACN,UAAU,EAAE,aAAa;QACzB,MAAM,EAAE,4BAA4B;QACpC,SAAS,EAAE,qBAAqB;QAChC,IAAI,EAAE,yDAAyD;QAC/D,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;GAEW,WAAW,CAoBvB;SApBY,WAAW","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name Header Color\r\n * @description\r\n * Cordova plugin to change color of header in Android Multitask View\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { HeaderColor } from '@ionic-native/header-color';\r\n *\r\n * constructor(private headerColor: HeaderColor) { }\r\n *\r\n * ...\r\n *\r\n * this.headerColor.tint('#becb29');\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'HeaderColor',\r\n  plugin: 'cordova-plugin-headercolor',\r\n  pluginRef: 'plugins.headerColor',\r\n  repo: 'https://github.com/tomloprod/cordova-plugin-headercolor',\r\n  platforms: ['Android']\r\n})\r\n\r\nexport class HeaderColor extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Set a color to the task header\r\n   * @param color {string} The hex value of the color\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova({\r\n    callbackStyle: 'object',\r\n    successName: 'success',\r\n    errorName: 'failure'\r\n  })\r\n  tint(color: string): Promise<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}